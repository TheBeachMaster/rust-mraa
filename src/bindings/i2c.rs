use bindings::types::*;
/* automatically generated by rust-bindgen */

pub enum Struct__i2c { }
pub type mraa_i2c_context = *mut Struct__i2c;
#[link(name = "mraa")]
extern "C" {
    pub fn mraa_i2c_init(bus: ::libc::c_int) -> mraa_i2c_context;
    pub fn mraa_i2c_init_raw(bus: ::libc::c_uint) -> mraa_i2c_context;
    pub fn mraa_i2c_frequency(dev: mraa_i2c_context, mode: mraa_i2c_mode_t)
     -> mraa_result_t;
    pub fn mraa_i2c_read(dev: mraa_i2c_context, data: *mut u8,
                         length: ::libc::c_int) -> ::libc::c_int;
    pub fn mraa_i2c_read_byte(dev: mraa_i2c_context) -> u8;
    pub fn mraa_i2c_read_byte_data(dev: mraa_i2c_context, command: u8)
     -> u8;
    pub fn mraa_i2c_read_word_data(dev: mraa_i2c_context, command: u8)
     -> u16;
    pub fn mraa_i2c_read_bytes_data(dev: mraa_i2c_context, command: u8,
                                    data: *mut u8, length: ::libc::c_int)
     -> ::libc::c_int;
    pub fn mraa_i2c_write(dev: mraa_i2c_context, data: *const u8,
                          length: ::libc::c_int) -> mraa_result_t;
    pub fn mraa_i2c_write_byte(dev: mraa_i2c_context, data: u8)
     -> mraa_result_t;
    pub fn mraa_i2c_write_byte_data(dev: mraa_i2c_context, data: u8,
                                    command: u8) -> mraa_result_t;
    pub fn mraa_i2c_write_word_data(dev: mraa_i2c_context, data: u16,
                                    command: u8) -> mraa_result_t;
    pub fn mraa_i2c_address(dev: mraa_i2c_context, address: u8)
     -> mraa_result_t;
    pub fn mraa_i2c_stop(dev: mraa_i2c_context) -> mraa_result_t;
}
